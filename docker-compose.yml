# docker-compose.yml
version: '3.9'

services:
  # Сервис Базы Данных PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: studafishka_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 5s
        timeout: 5s
        retries: 5
    restart: unless-stopped

  # Сервис Backend (Django)
  backend:
    build:
      context: ./backend
    container_name: studafishka_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped

  # Сервис Frontend (React/Vite Dev Server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: studafishka_frontend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - ./.env
    depends_on:
      - backend
    stdin_open: true 
    tty: true
    restart: unless-stopped

# Определяем именованные volumes
volumes:
  postgres_data:
  frontend_node_modules: